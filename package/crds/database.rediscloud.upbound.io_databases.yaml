---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: databases.database.rediscloud.upbound.io
spec:
  group: database.rediscloud.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - rediscloud
    kind: Database
    listKind: DatabaseList
    plural: databases
    singular: database
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Database is the Schema for the Databases API. <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseSpec defines the desired state of Database
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  alert:
                    description: Set of alerts to enable on the database
                    items:
                      properties:
                        name:
                          description: Alert name
                          type: string
                        value:
                          description: Alert value
                          type: number
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  averageItemSizeInBytes:
                    description: Relevant only to ram-and-flash clusters. Estimated
                      average size (measured in bytes) of the items stored in the
                      database
                    type: number
                  clientSslCertificate:
                    description: SSL certificate to authenticate user connections
                    type: string
                  dataEviction:
                    description: '(Optional) The data items eviction policy (either:
                      ''allkeys-lru'', ''allkeys-lfu'', ''allkeys-random'', ''volatile-lru'',
                      ''volatile-lfu'', ''volatile-random'', ''volatile-ttl'' or ''noeviction''.
                      Default: ''volatile-lru'')'
                    type: string
                  dataPersistence:
                    description: Rate of database data persistence (in persistent
                      storage)
                    type: string
                  enableTls:
                    description: Use TLS for authentication
                    type: boolean
                  externalEndpointForOssClusterApi:
                    description: Should use the external endpoint for open-source
                      (OSS) Cluster API
                    type: boolean
                  hashingPolicy:
                    description: List of regular expression rules to shard the database
                      by. See the documentation on clustering for more information
                      on the hashing policy - https://docs.redislabs.com/latest/rc/concepts/clustering/
                    items:
                      type: string
                    type: array
                  memoryLimitInGb:
                    description: Maximum memory usage for this specific database
                    type: number
                  modules:
                    description: Modules to be provisioned in the database
                    items:
                      properties:
                        name:
                          type: string
                      type: object
                    type: array
                  name:
                    description: A meaningful name to identify the database
                    type: string
                  passwordSecretRef:
                    description: Password used to access the database. If left empty,
                      the password will be generated automatically
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  periodicBackupPath:
                    description: Path that will be used to store database backup files
                    type: string
                  protocol:
                    description: The protocol that will be used to access the database,
                      (either ‘redis’ or 'memcached’)
                    type: string
                  replicaOf:
                    description: Set of Redis database URIs, in the format `redis://user:password@host:port`,
                      that this database will be a replica of. If the URI provided
                      is Redis Labs Cloud instance, only host and port should be provided
                    items:
                      type: string
                    type: array
                  replication:
                    description: Databases replication
                    type: boolean
                  sourceIps:
                    description: Set of CIDR addresses to allow access to the database
                    items:
                      type: string
                    type: array
                  subscriptionId:
                    description: Identifier of the subscription
                    type: number
                  supportOssClusterApi:
                    description: Support Redis open-source (OSS) Cluster API
                    type: boolean
                  throughputMeasurementBy:
                    description: Throughput measurement method, (either ‘number-of-shards’
                      or ‘operations-per-second’)
                    type: string
                  throughputMeasurementValue:
                    description: Throughput value (as applies to selected measurement
                      method)
                    type: number
                required:
                - memoryLimitInGb
                - name
                - protocol
                - subscriptionId
                - throughputMeasurementBy
                - throughputMeasurementValue
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: DatabaseStatus defines the observed state of Database.
            properties:
              atProvider:
                properties:
                  dbId:
                    description: Identifier of the database created
                    type: number
                  id:
                    type: string
                  privateEndpoint:
                    description: Private endpoint to access the database
                    type: string
                  publicEndpoint:
                    description: Public endpoint to access the database
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
