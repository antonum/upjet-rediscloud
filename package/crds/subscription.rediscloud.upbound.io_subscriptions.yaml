---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: subscriptions.subscription.rediscloud.upbound.io
spec:
  group: subscription.rediscloud.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - rediscloud
    kind: Subscription
    listKind: SubscriptionList
    plural: subscriptions
    singular: subscription
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Subscription is the Schema for the Subscriptions API. <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SubscriptionSpec defines the desired state of Subscription
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  allowlist:
                    description: An allowlist object
                    items:
                      properties:
                        cidrs:
                          description: Set of CIDR ranges that are allowed to access
                            the databases associated with this subscription
                          items:
                            type: string
                          type: array
                        securityGroupIds:
                          description: Set of security groups that are allowed to
                            access the databases associated with this subscription
                          items:
                            type: string
                          type: array
                      required:
                      - securityGroupIds
                      type: object
                    type: array
                  cloudProvider:
                    description: A cloud provider object
                    items:
                      properties:
                        cloudAccountId:
                          description: 'Cloud account identifier. Default: Redis Labs
                            internal cloud account (using Cloud Account Id = 1 implies
                            using Redis Labs internal cloud account). Note that a
                            GCP subscription can be created only with Redis Labs internal
                            cloud account'
                          type: string
                        provider:
                          description: The cloud provider to use with the subscription,
                            (either `AWS` or `GCP`)
                          type: string
                        region:
                          description: Cloud networking details, per region (single
                            region or multiple regions for Active-Active cluster only)
                          items:
                            properties:
                              multipleAvailabilityZones:
                                description: Support deployment on multiple availability
                                  zones within the selected region
                                type: boolean
                              networkingDeploymentCidr:
                                description: Deployment CIDR mask
                                type: string
                              networkingVpcId:
                                description: Either an existing VPC Id (already exists
                                  in the specific region) or create a new VPC (if
                                  no VPC is specified)
                                type: string
                              preferredAvailabilityZones:
                                description: List of availability zones used
                                items:
                                  type: string
                                type: array
                              region:
                                description: Deployment region as defined by cloud
                                  provider
                                type: string
                            required:
                            - networkingDeploymentCidr
                            - preferredAvailabilityZones
                            - region
                            type: object
                          type: array
                      required:
                      - region
                      type: object
                    type: array
                  creationPlan:
                    description: Information about the planned databases used to optimise
                      the database infrastructure. This information is only used when
                      creating a new subscription and any changes will be ignored
                      after this.
                    items:
                      properties:
                        averageItemSizeInBytes:
                          description: Relevant only to ram-and-flash clusters. Estimated
                            average size (measured in bytes) of the items stored in
                            the database
                          type: number
                        memoryLimitInGb:
                          description: Maximum memory usage for each database
                          type: number
                        modules:
                          description: Modules that will be used by the databases
                            in this subscription.
                          items:
                            type: string
                          type: array
                        quantity:
                          description: The planned number of databases
                          type: number
                        replication:
                          description: Databases replication
                          type: boolean
                        supportOssClusterApi:
                          description: Support Redis open-source (OSS) Cluster API
                          type: boolean
                        throughputMeasurementBy:
                          description: Throughput measurement method, (either ‘number-of-shards’
                            or ‘operations-per-second’)
                          type: string
                        throughputMeasurementValue:
                          description: Throughput value (as applies to selected measurement
                            method)
                          type: number
                      required:
                      - memoryLimitInGb
                      - modules
                      - quantity
                      - replication
                      - supportOssClusterApi
                      - throughputMeasurementBy
                      - throughputMeasurementValue
                      type: object
                    type: array
                  memoryStorage:
                    description: 'Memory storage preference: either ‘ram’ or a combination
                      of ''ram-and-flash’'
                    type: string
                  name:
                    description: A meaningful name to identify the subscription
                    type: string
                  paymentMethod:
                    description: Payment method for the requested subscription. If
                      credit card is specified, the payment method Id must be defined.
                    type: string
                  paymentMethodId:
                    description: A valid payment method pre-defined in the current
                      account
                    type: string
                required:
                - cloudProvider
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: SubscriptionStatus defines the observed state of Subscription.
            properties:
              atProvider:
                properties:
                  cloudProvider:
                    description: A cloud provider object
                    items:
                      properties:
                        region:
                          description: Cloud networking details, per region (single
                            region or multiple regions for Active-Active cluster only)
                          items:
                            properties:
                              networks:
                                description: List of networks used
                                items:
                                  properties:
                                    networkingDeploymentCidr:
                                      type: string
                                    networkingSubnetId:
                                      type: string
                                    networkingVpcId:
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  id:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
